
.testContainBtn {
    width: 100%;
    height: 80px;
    border-radius: 20px;
    margin-left: 20px;
    margin-right: 20px;
    margin-top: 15px;
    position: relative;
}


.testContain {
    position: relative;
    height: 80px;
    display: flex;
    justify-content: space-between;
    background-color: white;
    border-radius: 20px;
    margin-left: 20px;
    margin-right: 20px;
    margin-top: 15px;
    box-shadow: 2px 2px 4px lightgray;

    p {
        margin: 0;
    }
}


.testTxt {
    background-color: white;
    border-radius: 20px;
    width: 100%;
    transform: scaleX(1);
}


.testName {
    padding-top: 15px;
    padding-left: 15px;
    font-size: 20px;
    @include ellipse;
}

.testPrice {
    min-width: 50px;
    padding-left: 10px;
}

.testName,
.testPrice {
    @include bold;
}

.testInfo {
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding: 15px;
    padding-top: 10px;
}

.testSide {
    @include ellipse;
}

.testCheck {
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    width: 80px;
    @include center;
    background-color: $color-tertiary;
    border-top-right-radius: 20px;
    border-bottom-right-radius: 20px;

    &__circle {
        height: 20px;
        width: 20px;
        background-color: white;
        border-radius: 50%;
        @include center;

        & i {
            color: $color-tertiary;
        }
    }
}



.testContainBtn {
    &:hover + .testContain {
        & > .testTxt {
            width: calc(100% - 80px);
            cursor: pointer;
        }

        & > .testCheck {
            transform: scaleX(1);
        }
    }
}




.testCheck {
    transform-origin: 100% 50%;
    transform: scaleX(0);
    transition: transform 500ms;
    &:hover {
        transform: scaleX(1);
        cursor: pointer;
    }
   
}


.testCheck {
    &:hover + .testTxt {
        width: calc(100% - 80px);
    }
}


/*

.btn {
    &:hover + .boxes {
        & > .boxes--rotDegrees {
            transform: rotate(0deg);
        }
        & > .boxes--rotTurns {
             transform: rotate(0turn);
        }
    }
}

.boxes {
   &--rotDegrees {
        transform: rotate(-360deg);
        transition: transform 500ms ease-in-out;
    }

    &--rotTurns {
        background: pink;
        transform: rotate(-1turn);
        transition: transform 500ms ease-in-out;
    }
}

*/
